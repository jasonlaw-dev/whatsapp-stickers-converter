{"version":3,"sources":["WhatsAppStickersConverter.js","ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["WhatsAppStickersConverter","module","api","_this","this","WebAssembly","instantiate","Module","Uint8Array","of","Instance","e","isWebAssemblySupported","Error","Promise","resolve","reject","setTimeout","libwebp","then","version","cwrap","create_buffer","create_buffer_with_size","destroy_buffer","encode","decode","free_result","get_encode_result_pointer","get_encode_result_size","get_decode_result_pointer","get_decode_result_width","get_decode_result_height","console","log","concat","data","JSZip","loadAsync","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","zip","imagePaths","wrap","_context","prev","next","forEach","relativePath","startsWith","endsWith","push","length","file","async","t0","sent","all","map","path","t1","abrupt","trayFile","stickersFiles","stop","_x2","apply","arguments","type","reader","FileReader","onloadend","_callee3","_context3","_this2","resizeAndConvert","result","t2","t3","t4","readAsArrayBuffer","imageData","quality","p","width","height","HEAP8","set","resultPointer","resultSize","resultView","buffer","btoa","reduce","byte","String","fromCharCode","url","binaryString","atob","replace","len","bytes","i","charCodeAt","byteLength","Uint8ClampedArray","canvas","document","createElement","context","getContext","ImageData","putImageData","toDataURL","input","px","toWebp","_this3","Jimp","read","_image","b64Promise","contain","getBase64Async","MIME_PNG","_ref3","_callee5","useChrome","webpUrl","errorMsg","_context5","dataURLToCanvasContext","getImageData","convertImageDataToWebpURL","Math","ceil","error","_x5","_this4","emitter","EventEmitter","_callee6","tray","stickersInPack","numOfPacks","pack","trays","sticker","_context6","processImageFile","index","addNumberToTray","emit","floor","toConsumableArray","splice","image","Image","addEventListener","drawImage","src","text","save","beginPath","arc","PI","fillStyle","fill","restore","font","textAlign","lineWidth","fillText","ImageUpload","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","converter","handleSubmit","preventDefault","setState","progress","isSubmitting","convertedPacks","_this$state","state","identifier","name","publisher","zipFile","uploadType","_this$state2","zipContent","stickersLoaded","_ref2","unzip","convertImagesToPacks","on","tray_image","stickers","image_data","isMobile","isDownloadMultipleFilesSupported","handleDownload","window","scrollTo","body","scrollHeight","gtag","packs","catch","message","toString","handleFileChange","target","files","handleInputChange","defineProperty","id","value","jsonString","JSON","stringify","encodeURIComponent","open","saveAs","Blob","isFormValid","isIdentifierValid","isSubmittable","test","isApiLoaded","init","react_default","Form_default","onSubmit","Alert_default","variant","Group","as","Row","controlId","Label","column","sm","Col_default","Control","required","onChange","isInvalid","Feedback","ButtonToolbar_default","ToggleButtonGroup_default","ToggleButton_default","className","isValid","accept","multiple","Button_default","disabled","ProgressBar_default","style","transition","marginTop","now","hidden","marginBottom","onClick","React","Component","App","UAParser","navigator","os","getOS","browser","getBrowser","osName","browserName","Container_default","Row_default","lg","Navbar_default","bg","expand","Brand","src_ImageUpload","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ffae1d6.chunk.js","sourcesContent":["/* global libwebp, WebAssembly */\n\nimport Jimp from 'jimp';\nimport JSZip from 'jszip';\nimport EventEmitter from 'events';\n\nconst isWebAssemblySupported = () => {\n  try {\n    if (typeof WebAssembly === 'object'\n      && typeof WebAssembly.instantiate === 'function') {\n      const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\n      if (module instanceof WebAssembly.Module) return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n    }\n  } catch (e) {\n    return false;\n  }\n  return false;\n};\n\nclass WhatsAppStickersConverter {\n  module = null;\n\n  api = null;\n\n  init() {\n    if (!isWebAssemblySupported()) {\n      throw new Error('WebAssembly is not supported.');\n    }\n\n    return new Promise((resolve, reject) => {\n      // in case wasm is not loaded\n      setTimeout(() => reject(new Error('WebAssembly is not loaded.')), 2000);\n      libwebp()\n        .then((module) => {\n          this.module = module;\n          this.api = {\n            version: module.cwrap('version', 'number', []),\n            create_buffer: module.cwrap('create_buffer', 'number', ['number', 'number']),\n            create_buffer_with_size: module.cwrap('create_buffer_with_size', 'number', ['number']),\n            destroy_buffer: module.cwrap('destroy_buffer', '', ['number']),\n            encode: module.cwrap('encode', '', ['number', 'number', 'number', 'number']),\n            decode: module.cwrap('decode', 'number', ['number', 'number']),\n            free_result: module.cwrap('free_result', '', ['number']),\n            get_encode_result_pointer: module.cwrap('get_encode_result_pointer', 'number', []),\n            get_encode_result_size: module.cwrap('get_encode_result_size', 'number', []),\n            get_decode_result_pointer: module.cwrap('get_decode_result_pointer', 'number', []),\n            get_decode_result_width: module.cwrap('get_decode_result_width', 'number', []),\n            get_decode_result_height: module.cwrap('get_decode_result_height', 'number', []),\n          };\n          console.log(`WebAssembly libwebp loaded, api version: ${this.api.version()}`);\n          resolve();\n        });\n    });\n  }\n\n  async unzip(data) {\n    return JSZip.loadAsync(data).then(async (zip) => {\n      const imagePaths = [];\n      zip.forEach((relativePath) => {\n        if (!relativePath.startsWith('__MACOSX') && (relativePath.endsWith('.png') || relativePath.endsWith('.jpg'))) {\n          imagePaths.push(relativePath);\n        }\n      });\n      if (imagePaths.length < 3) {\n        throw new Error('Less than 3 images are found!');\n      }\n      return {\n        trayFile: await zip.file(imagePaths[0]).async('blob'),\n        stickersFiles: await Promise.all(imagePaths.map(path => zip.file(path).async('blob'))),\n      };\n    });\n  }\n\n  async processImageFile(file, type) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onloadend = async () => {\n        try {\n          if (type === 'tray') {\n            resolve(await this.resizeAndConvert(reader.result, 96, false));\n          } else if (type === 'stickers') {\n            resolve(await this.resizeAndConvert(reader.result, 512, true));\n          }\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  convertImageDataToWebpURL(imageData, quality) {\n    const p = this.api.create_buffer(imageData.width, imageData.height);\n    this.module.HEAP8.set(imageData.data, p);\n    this.api.encode(p, imageData.width, imageData.height, quality);\n    const resultPointer = this.api.get_encode_result_pointer();\n    const resultSize = this.api.get_encode_result_size();\n    const resultView = new Uint8Array(this.module.HEAP8.buffer, resultPointer, resultSize);\n    const result = new Uint8Array(resultView);\n    this.api.free_result(resultPointer);\n    this.api.destroy_buffer(p);\n    return `data:image/webp;base64,${btoa(result.reduce((data, byte) => data + String.fromCharCode(byte), ''))}`;\n  }\n\n  convertWebpURLToPngURL(url) {\n    const binaryString = atob(url.replace(/^data:image\\/[a-z]+;base64,/, ''));\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    const p = this.api.create_buffer_with_size(bytes.byteLength);\n    this.module.HEAP8.set(bytes, p);\n    this.api.decode(p, len);\n    const resultPointer = this.api.get_decode_result_pointer();\n\n    const width = this.api.get_decode_result_width();\n    const height = this.api.get_decode_result_height();\n    const resultSize = width * height * 4;\n    const resultView = new Uint8Array(this.module.HEAP8.buffer, resultPointer, resultSize);\n    const result = new Uint8ClampedArray(resultView);\n    this.api.free_result(resultPointer);\n    this.api.destroy_buffer(p);\n\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const imageData = new ImageData(result, width, height);\n    canvas.width = width;\n    canvas.height = height;\n    context.putImageData(imageData, 0, 0);\n\n    return canvas.toDataURL('image/png');\n  }\n\n\n  static dataURLToCanvasContext(url) {\n    return new Promise((resolve) => {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      const image = new Image();\n      image.addEventListener('load', () => {\n        canvas.width = image.width;\n        canvas.height = image.height;\n        context.drawImage(image, 0, 0, canvas.width, canvas.height);\n        resolve(context);\n      }, false);\n      image.src = url;\n    });\n  }\n\n  static async addNumberToTray(url, text) {\n    const context = await WhatsAppStickersConverter.dataURLToCanvasContext(url);\n    const { canvas } = context;\n\n    context.save();\n\n    // draw circle\n    context.beginPath();\n    context.arc(canvas.width - 0 - 16, canvas.height - 0 - 16, 16, 0, 2 * Math.PI);\n    context.fillStyle = 'rgba(53, 67, 90, 0.85)';\n    context.fill();\n\n    context.restore();\n\n    // draw number\n    context.font = '30px helvetica';\n    context.textAlign = 'center';\n    context.fillStyle = '#f7f7f7';\n    context.lineWidth = 2;\n    context.fillText(`${text}`, canvas.width - 0 - 16, canvas.height - 0 - 6);\n    return canvas.toDataURL('image/png');\n  }\n\n  resizeAndConvert(input, px, toWebp) {\n    return Jimp.read(input).then((_image) => {\n      const image = _image.contain(px, px);\n\n      const b64Promise = image.getBase64Async(Jimp.MIME_PNG);\n\n      if (toWebp) {\n        return b64Promise.then(async (url) => {\n          const context = await WhatsAppStickersConverter.dataURLToCanvasContext(url);\n          const { canvas } = context;\n          const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n          let quality = 1.0;\n\n          const useChrome = false;\n\n          let webpUrl;\n\n          while (true) {\n            if (useChrome) {\n              webpUrl = canvas.toDataURL('image/webp', quality);\n            } else {\n              webpUrl = this.convertImageDataToWebpURL(imageData, Math.ceil(quality * 100));\n            }\n\n            const byteLength = atob(webpUrl.replace(/^data:image\\/[a-z]+;base64,/, '')).length;\n\n            if (byteLength <= 100000) {\n              break;\n            }\n            quality -= 0.08;\n            const errorMsg = `WebP size ${Math.ceil(byteLength / 1024)}kb exceeded 100kb`;\n            if (quality <= 0.07) {\n              throw new Error(`Error converting files, ${errorMsg}`);\n            }\n            console.error(`${errorMsg}, resizing with quality ${quality}`);\n          }\n          return webpUrl;\n        });\n      }\n      return b64Promise;\n    });\n  }\n\n  convertImagesToPacks(trayFile, stickersFiles) {\n    const emitter = new EventEmitter();\n    (async () => {\n      try {\n        const tray = await this.processImageFile(trayFile, 'tray');\n        const stickersInPack = [];\n\n        const numOfPacks = Math.ceil(stickersFiles.length / 30);\n\n        for (let pack = 0; pack < numOfPacks; pack++) {\n          stickersInPack.push([]);\n        }\n\n        const trays = await Promise.all(stickersInPack.map((pack, index) => (\n          numOfPacks === 1 ? Promise.resolve(tray) : WhatsAppStickersConverter.addNumberToTray(tray, `${index + 1}`)\n        )));\n\n        for (let i = 0; i < stickersFiles.length; i++) {\n          // eslint-disable-next-line no-await-in-loop\n          const sticker = await this.processImageFile(stickersFiles[i], 'stickers');\n          emitter.emit('stickerLoad');\n          stickersInPack[Math.floor(i / 30)].push(sticker);\n        }\n\n        // balance stickers if the last pack has less than 3 images\n        if (numOfPacks > 1 && stickersInPack[numOfPacks - 1].length < 3) {\n          stickersInPack[numOfPacks - 1] = [\n            ...stickersInPack[numOfPacks - 2].splice(-(3 - stickersInPack[numOfPacks - 1].length)),\n            ...stickersInPack[numOfPacks - 1],\n          ];\n        }\n\n        emitter.emit('load', { trays, stickersInPack });\n      } catch (e) {\n        emitter.emit('error', e);\n      }\n    })();\n    return emitter;\n  }\n}\n\nexport default WhatsAppStickersConverter;\n","/* global gtag */\n\nimport React from 'react';\nimport Form from 'react-bootstrap/lib/Form';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport Button from 'react-bootstrap/lib/Button';\nimport ProgressBar from 'react-bootstrap/lib/ProgressBar';\nimport ToggleButtonGroup from 'react-bootstrap/lib/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/lib/ToggleButton';\nimport ButtonToolbar from 'react-bootstrap/lib/ButtonToolbar';\nimport Alert from 'react-bootstrap/lib/Alert';\nimport saveAs from 'file-saver';\nimport PropTypes from 'prop-types';\nimport WhatsAppStickersConverter from './WhatsAppStickersConverter';\n\nclass ImageUpload extends React.Component {\n  converter = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifier: '',\n      name: '',\n      publisher: '',\n      trayFile: null,\n      stickersFiles: null,\n      zipFile: null,\n      isSubmitting: false,\n      progress: 0,\n      errorMsg: '',\n      convertedPacks: [],\n      uploadType: 'image',\n      isApiLoaded: true,\n    };\n\n    this.converter = new WhatsAppStickersConverter();\n    this.converter.init().then().catch((e) => {\n      console.error(e);\n      this.setState({\n        isApiLoaded: false,\n      });\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      progress: 0,\n      errorMsg: '',\n      isSubmitting: true,\n      convertedPacks: [],\n    });\n\n    const {\n      identifier, name, publisher, zipFile, uploadType,\n    } = this.state;\n\n    (async () => {\n      let { trayFile, stickersFiles } = this.state;\n      if (uploadType === 'image') {\n        stickersFiles = [];\n        for (let i = 0; i < this.state.stickersFiles.length; i++) {\n          stickersFiles.push(this.state.stickersFiles[i]);\n        }\n      }\n      if (uploadType === 'zip') {\n        const zipContent = await this.converter.unzip(zipFile);\n        // eslint-disable-next-line prefer-destructuring\n        trayFile = zipContent.trayFile;\n        // eslint-disable-next-line prefer-destructuring\n        stickersFiles = zipContent.stickersFiles;\n      }\n\n      const emitter = this.converter.convertImagesToPacks(trayFile, stickersFiles);\n      let stickersLoaded = 0;\n      emitter.on('stickerLoad', () => {\n        stickersLoaded += 1;\n        this.setState({ progress: stickersLoaded / stickersFiles.length * 100 });\n      });\n\n      const { trays, stickersInPack } = await new Promise((resolve, reject) => {\n        emitter.on('error', reject);\n        emitter.on('load', resolve);\n      });\n\n      const convertedPacks = stickersInPack.map((pack, index) => ({\n        identifier: identifier + (index === 0 ? '' : `_${index + 1}`),\n        name: name + (index === 0 ? '' : ` (${index + 1})`),\n        publisher,\n        tray_image: trays[index].replace(/^data:image\\/[a-z]+;base64,/, ''),\n        stickers: pack.map(sticker => ({\n          image_data: sticker.replace(/^data:image\\/[a-z]+;base64,/, ''),\n        })),\n      }));\n\n      console.log(convertedPacks);\n\n      convertedPacks.forEach((pack) => {\n        if (!this.props.isMobile) {\n          if (convertedPacks.length === 1 || this.props.isDownloadMultipleFilesSupported) {\n            this.handleDownload(pack);\n          }\n        }\n      });\n      this.setState({ convertedPacks, isSubmitting: false });\n      window.scrollTo(0, document.body.scrollHeight);\n\n      gtag('event', 'stickers-convert', {\n        packs: convertedPacks.length,\n        stickers: stickersFiles.length,\n      });\n    })().catch((error) => {\n      console.error(error);\n      this.setState({\n        errorMsg: error.message || e.toString(),\n        isSubmitting: false,\n      });\n    });\n  };\n\n  handleFileChange = (e, type) => {\n    e.preventDefault();\n\n    if (type === 'tray') {\n      this.setState({\n        trayFile: e.target.files[0],\n      });\n\n\n      // for debugging photo\n      // setTimeout(async() => {\n      //   const tray = await processImageFile(this.state.trayFile, 'tray');\n      //   const tray2 = await addNumberToTray(tray, '8');\n      //   this.setState({\n      //     imagePreviewUrl: tray2,\n      //   })\n      // }, 500)\n    } else if (type === 'stickers') {\n      this.setState({\n        stickersFiles: e.target.files,\n      });\n    } else if (type === 'zip') {\n      this.setState({\n        zipFile: e.target.files[0],\n      });\n    }\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleDownload = (pack) => {\n    const jsonString = JSON.stringify(pack);\n    if (this.props.isMobile) {\n      const url = `twesticker://json?data=${encodeURIComponent(jsonString)}`;\n      window.open(url);\n    } else {\n      saveAs(new Blob([jsonString], { type: 'application/json' }), `${pack.identifier}.json`);\n    }\n  };\n\n  isFormValid = () => this.isIdentifierValid() && this.state.identifier && this.state.name && this.state.publisher\n    && ((this.state.uploadType === 'image' && this.state.trayFile != null && this.state.stickersFiles && this.state.stickersFiles.length >= 3)\n      || (this.state.uploadType === 'zip' && this.state.zipFile != null)\n    );\n\n  isSubmittable = () => this.isFormValid() && !this.state.isSubmitting;\n\n  isIdentifierValid = () => /^[A-Za-z0-9-_.\\s]*$/.test(this.state.identifier);\n\n  render() {\n    return (\n      <Form onSubmit={e => this.handleSubmit(e)}>\n        {\n          this.state.isApiLoaded || (\n            <Alert variant=\"danger\">\n              Critical API not loaded, please refresh.\n            </Alert>\n          )\n        }\n        <Form.Group as={Row} controlId=\"identifier\">\n          <Form.Label column sm={4}>Identifier</Form.Label>\n          <Col sm={6}>\n            <Form.Control type=\"text\" required onChange={this.handleInputChange} isInvalid={!this.isIdentifierValid()} />\n            <Form.Control.Feedback type=\"invalid\">\n              {'Alphanumeric characters with \".\", \"_\", \"-\" or \" \" only '}\n            </Form.Control.Feedback>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"name\">\n          <Form.Label column sm={4}>Pack Name</Form.Label>\n          <Col sm={6}>\n            <Form.Control type=\"text\" required onChange={this.handleInputChange} />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"publisher\">\n          <Form.Label column sm={4}>Publisher</Form.Label>\n          <Col sm={6}>\n            <Form.Control type=\"text\" required onChange={this.handleInputChange} />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"uploadType\">\n          <Form.Label column sm={4}>Upload Type</Form.Label>\n          <Col sm={8}>\n            <ButtonToolbar>\n              <ToggleButtonGroup type=\"radio\" name=\"options\" value={this.state.uploadType} onChange={e => this.handleInputChange({ target: { id: 'uploadType', value: e } })}>\n                <ToggleButton value=\"image\">Image Files</ToggleButton>\n                <ToggleButton value=\"zip\">Zip File</ToggleButton>\n              </ToggleButtonGroup>\n            </ButtonToolbar>\n          </Col>\n        </Form.Group>\n\n        {\n          this.state.uploadType === 'image' ? (\n            <div>\n              <Form.Group as={Row} controlId=\"formTrayFile\">\n                <Form.Label column sm={4}>Tray Icon</Form.Label>\n                <Col sm={8}>\n                  <div className=\"custom-file\">\n                    <Form.Control\n                      className=\"custom-file-input\"\n                      type=\"file\"\n                      required\n                      isValid={false}\n                      onChange={e => this.handleFileChange(e, 'tray')}\n                      accept=\"image/png, image/jpeg\"\n                    />\n                    <Form.Label className=\"custom-file-label\">{this.state.trayFile ? this.state.trayFile.name : 'Choose file (any resolution)' }</Form.Label>\n                  </div>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formStickersFiles\">\n                <Form.Label column sm={4}>Stickers (3 or more images)</Form.Label>\n                <Col sm={8}>\n                  <div className=\"custom-file\">\n                    <Form.Control\n                      className=\"custom-file-input\"\n                      type=\"file\"\n                      required\n                      multiple\n                      onChange={e => this.handleFileChange(e, 'stickers')}\n                      accept=\"image/png\"\n                    />\n                    <Form.Label className=\"custom-file-label\">{this.state.stickersFiles && this.state.stickersFiles.length > 0 ? `${this.state.stickersFiles.length} file(s) selected` : 'Choose file (any resolution)' }</Form.Label>\n                  </div>\n                </Col>\n              </Form.Group>\n            </div>\n          ) : (this.state.uploadType === 'zip' ? (\n            <Form.Group as={Row} controlId=\"formZipFile\">\n              <Form.Label column sm={4}>Zip file</Form.Label>\n              <Col sm={8}>\n                <div className=\"custom-file\">\n                  <Form.Control\n                    className=\"custom-file-input\"\n                    type=\"file\"\n                    required\n                    multiple\n                    onChange={e => this.handleFileChange(e, 'zip')}\n                    accept=\".zip\"\n                  />\n                  <Form.Label className=\"custom-file-label\">{this.state.zipFile ? this.state.zipFile.name : 'Choose file' }</Form.Label>\n                </div>\n              </Col>\n            </Form.Group>\n          ) : null)\n        }\n\n        <Button type=\"submit\" disabled={!this.isSubmittable()}>Convert Images</Button>\n        <ProgressBar style={{ transition: 'none', marginTop: '15px' }} now={this.state.progress} hidden={!this.state.isSubmitting && !this.state.errorMsg} variant={this.state.errorMsg ? 'danger' : ''} />\n        <p\n          className={this.state.errorMsg ? 'text-danger' : 'text-success'}\n          hidden={!this.state.errorMsg && this.state.progress !== 100}\n        >\n          {this.state.errorMsg || 'Images converted!'}\n        </p>\n        {(this.props.isMobile || (this.state.convertedPacks.length > 1 && !this.props.isDownloadMultipleFilesSupported)) &&\n        this.state.convertedPacks.map((pack, index) => (\n          <div style={{ marginTop: '3px', marginBottom: '3px' }}>\n            <Button variant=\"outline-primary\" onClick={() => this.handleDownload(pack)}>\n              {`JSON File ${index + 1}`}\n            </Button>\n          </div>\n        ))}\n      </Form>\n    );\n  }\n}\n\nImageUpload.propTypes = {\n  isMobile: PropTypes.bool,\n  isDownloadMultipleFilesSupported: PropTypes.bool,\n};\n\nexport default ImageUpload;\n","import React from 'react';\nimport Container from 'react-bootstrap/lib/Container';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport ImageUpload from './ImageUpload';\nimport UAParser from 'ua-parser-js';\n\n// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n\n  isMobile = false;\n\n  isDownloadMultipleFilesSupported = false;\n\n  constructor(props) {\n    super(props);\n    const result = new UAParser(window.navigator);\n    const os = result.getOS();\n    const browser = result.getBrowser();\n    const osName = os && os.name ? os.name : '';\n    const browserName = browser && browser.name ? browser.name : '';\n    this.isMobile = osName.startsWith('Android') || osName.startsWith('iOS');\n    this.isDownloadMultipleFilesSupported = browserName.startsWith('Chrom');\n  }\n\n  render() {\n    return (\n\n      <Container style={{ marginTop: '20px', marginBottom: '20px' }}>\n        <Row className=\"justify-content-md-center\">\n          <Col lg={10}>\n            <Navbar bg=\"light\" expand=\"lg\" style={{ marginBottom: '20px' }}>\n              <Navbar.Brand>WhatsApp Stickers Converter</Navbar.Brand>\n            </Navbar>\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col lg={10}>\n            <ImageUpload isMobile={this.isMobile} isDownloadMultipleFilesSupported={this.isDownloadMultipleFilesSupported} />\n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}